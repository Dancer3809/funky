# The commands run to produce demo.gif. Used with:
# https://github.com/bbugyi200/scripts/blob/master/bin/main/autodemo
#
# peek dimensions: 
((50))# This is a demo for funky.<<1>>[CLEAR]((100))# We use 'funky' to create local funks and 'gfunky' to create global funks.<<1.5>>[CLEAR]# But funky is too hard to type, so let's start by creating a global funk for funky.<<1.5>>[CLEAR]((150))gfunky -a fu
ifunky[ESC]:wq
((100))# Now let's create some local (per-directory) funks.<<1>>[CLEAR]((150))mkdir foo bar
cd foo
fu -a run
ifor[TAB]<<0.5>>i[TAB]<<0.2>>{0..4}[TAB]<<0.5>>printf "COUNT: %s\\n" "$((i+1))"
<<0.5>>sleep 0.1[ESC]<<0.5>>joecho "FOOOOOOO!"<<0.5>>[ESC]:wq
run
<<2>>((50))clear
cd ../bar
fu -a run
ifor[TAB]<<0.5>>_[TAB]<<0.2>>{0..4}[TAB]<<0.5>>printf "BAR "
<<0.5>>sleep 0.1<<0.5>>[ESC]:wq
run
<<2>>((50))clear
((100))# Show all currently defined local funks by running 'funky' with no arguments.<<1.5>>[CLEAR]((150))fu<<0.5>>
<<2.5>>((50))clear
cd ../foo
fu<<0.5>>
<<2.5>>gfunky
<<3>>((50))clear
((100))# Use the '-e' option to edit an existing funk.<<1.5>>[CLEAR]((150))fu -e run
cGprintf "Kung FOOOOOOOOOO!"<<0.5>>[ESC]:wq
run
<<1.5>>((50))clear
((100))# Use the '-r' option to remove funks.<<1.5>>[CLEAR]((150))fu -r run
cd ../bar
fu -r run
<<1.5>>((50))clear && cd
((50))# Having trouble keeping up?<<1>>[CLEAR]# Don't sweat it. It's all in the docs! :)<<1>>[CLEAR]((150))funky -h
<<3>>((25))clear && rmdir foo bar

